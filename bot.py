import logging
import datetime
from aiogram import Bot, Dispatcher, types
from aiogram.types import InputFile
from aiogram.utils import executor

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)
TOKEN = "8019210319:AAEkPi_tpqON8PoKY563Dq3XpL_tHV5o6pM"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
logging.basicConfig(level=logging.INFO)

@dp.message_handler(commands=["–∏–Ω—Ñ–∞"])
async def send_user_info(message: types.Message):
    user = message.from_user
    chat = await bot.get_chat_member(message.chat.id, user.id)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç
    if chat.joined_date:
        join_date = datetime.datetime.utcfromtimestamp(chat.joined_date).strftime('%Y-%m-%d %H:%M:%S')
        duration = (datetime.datetime.utcnow() - datetime.datetime.utcfromtimestamp(chat.joined_date)).days
    else:
        join_date = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        duration = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
    photos = await bot.get_user_profile_photos(user.id)
    
    if photos.photos:
        photo_id = photos.photos[0][-1].file_id  # –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
        await bot.send_photo(
            chat_id=message.chat.id, 
            photo=photo_id,
            caption=f"üë§ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:*\n"
                    f"üîπ *–ò–º—è:* {user.first_name} {user.last_name or ''}\n"
                    f"üîπ *–Æ–∑–µ—Ä–Ω–µ–π–º:* @{user.username or '–ù–µ—Ç'}\n"
                    f"üîπ *ID:* {user.id}\n"
                    f"üîπ *–î–∞—Ç–∞ –≤—Ö–æ–¥–∞ –≤ —á–∞—Ç:* {join_date}\n"
                    f"üîπ *–î–Ω–µ–π –≤ —á–∞—Ç–µ:* {duration}",
            parse_mode="Markdown"
        )
    else:
        await message.reply(
            f"üë§ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:*\n"
            f"üîπ *–ò–º—è:* {user.first_name} {user.last_name or ''}\n"
            f"üîπ *–Æ–∑–µ—Ä–Ω–µ–π–º:* @{user.username or '–ù–µ—Ç'}\n"
            f"üîπ *ID:* {user.id}\n"
            f"üîπ *–î–∞—Ç–∞ –≤—Ö–æ–¥–∞ –≤ —á–∞—Ç:* {join_date}\n"
            f"üîπ *–î–Ω–µ–π –≤ —á–∞—Ç–µ:* {duration}",
            parse_mode="Markdown"
        )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
